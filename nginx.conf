events {
  worker_connections  1024;
}

http {

    server {

        listen 8080;
        server_name default_server;

        #check if environment is temporary. If not, it is permanent (P)
        #https redirect should only occur on permanent environments
        if ($host ~ ^tmp-) {
          set $tempenv 1;
        }

        if ($host ~ ^localhost) {
          set $tempenv 1;
        }

        if ($tempenv != 1 ) {
          set $test P;
        }

        #if http it is unsecure (U)
        if ($http_x_forwarded_proto = "http") {
           set $test "${test}U";
        }

        #if it is a permanent environment and it is unsecure
        if ($test = PU) {
           return 301 https://$host$request_uri;
        }

        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        client_max_body_size 50M;


        # Compression

         # Enable Gzip compressed.
         gzip on;

        # Enable compression both for HTTP/1.0 and HTTP/1.1.
        gzip_http_version  1.1;

        # Compression level (1-9).
        # 5 is a perfect compromise between size and cpu usage, offering about
        # 75% reduction for most ascii files (almost identical to level 9).
        gzip_comp_level    5;

        # Don't compress anything that's already small and unlikely to shrink much
        # if at all (the default is 20 bytes, which is bad as that usually leads to
        # larger files after gzipping).
        gzip_min_length    256;

        # Compress data even for clients that are connecting to us via proxies,
        # identified by the "Via" header (required for CloudFront).
        gzip_proxied       any;

        # Tell proxies to cache both the gzipped and regular version of a resource
        # whenever the client's Accept-Encoding capabilities header varies;
        # Avoids the issue where a non-gzip capable client (which is extremely rare
        # today) would display gibberish if their proxy gave them the gzipped version.
        gzip_vary          on;

        # Compress all output labeled with one of the following MIME-types.
        gzip_types
          application/atom+xml
          application/javascript
          application/json
          application/rss+xml
          application/x-font-ttf
          application/x-web-app-manifest+json
          application/xhtml+xml
          application/xml
          font/opentype
          image/svg+xml
          image/x-icon
          text/css
          text/plain
          text/x-component;

# Routes that have both frontend and backend implementation, dependent on requested content type

# The problem is cors call for server. Because it has accept html, would it be sent to frontend server, which does not implement cors
# as a work-around, we implement cors here in nginx for both cases

#  path="/api/organizations/:organizationID/records/:recordId"
#  path="/api/organizations/:organizationID/representatives"
#  path="/api/organizations/:organizationID/records"

        location ~* /api/organizations/[0-9a-z]+/representatives {

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, PATCH, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($http_accept ~* "application/json") {
                  proxy_pass http://records-of-processing-activities:8080;
            }
            if ($http_accept ~* "text/html") {
                  proxy_pass http://records-of-processing-activities-gui:8080;
            }
        }

        location ~* /api/organizations/[0-9a-z]+/records {

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($http_accept ~* "application/json") {
                  proxy_pass http://records-of-processing-activities:8080;
            }
            if ($http_accept ~* "text/html") {
                  proxy_pass http://records-of-processing-activities-gui:8080;
            }
        }

        location ~* /api/organizations/[0-9a-z]+/records/[0-9a-z]+ {

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, PATCH, DELETE, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($http_accept ~* "application/json") {
                  proxy_pass http://records-of-processing-activities:8080;
            }
            if ($http_accept ~* "text/html") {
                  proxy_pass http://records-of-processing-activities-gui:8080;
            }
        }

        location / {
            proxy_pass http://records-of-processing-activities-gui:8080;
        }

    }
}
